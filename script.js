// –ú–∞—Å—Å–∏–≤ —Ç–æ–≤–∞—Ä–æ–≤
let products = [];
let productId = 1;

// DOM —ç–ª–µ–º–µ–Ω—Ç—ã
const productsGrid = document.getElementById('productsGrid');
const addProductBtn = document.getElementById('addProductBtn');
const addProductModal = document.getElementById('addProductModal');
const closeModal = document.getElementById('closeModal');
const productForm = document.getElementById('productForm');
const notification = document.getElementById('notification');

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ localStorage –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
function loadProducts() {
    const savedProducts = localStorage.getItem('products');
    if (savedProducts) {
        products = JSON.parse(savedProducts);
        productId = products.length > 0 ? Math.max(...products.map(p => p.id)) + 1 : 1;
        renderProducts();
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –≤ localStorage
function saveProducts() {
    localStorage.setItem('products', JSON.stringify(products));
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤
function renderProducts() {
    productsGrid.innerHTML = '';
    
    if (products.length === 0) {
        productsGrid.innerHTML = '<div class="no-products">–ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—ã–π —Ç–æ–≤–∞—Ä!</div>';
        return;
    }
    
    products.forEach(product => {
        const productCard = document.createElement('div');
        productCard.className = 'product-card';
        productCard.innerHTML = `
            <button class="delete-product" onclick="deleteProduct(${product.id})">√ó</button>
            <div class="product-image">
                ${product.image ? `<img src="${product.image}" alt="${product.name}">` : 'üì¶'}
            </div>
            <h3 class="product-name">${product.name}</h3>
            <p class="product-description">${product.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}</p>
            <div class="product-price">${product.price.toLocaleString()} ‚ÇΩ</div>
        `;
        productsGrid.appendChild(productCard);
    });
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
function addProduct(name, description, price, image) {
    const product = {
        id: productId++,
        name: name,
        description: description,
        price: parseFloat(price),
        image: image || ''
    };
    
    products.push(product);
    saveProducts();
    renderProducts();
    showNotification('–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω!');
}

// –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞
function deleteProduct(id) {
    products = products.filter(product => product.id !== id);
    saveProducts();
    renderProducts();
    showNotification('–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω!');
}

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function showNotification(message) {
    notification.textContent = message;
    notification.classList.add('show');
    
    setTimeout(() => {
        notification.classList.remove('show');
    }, 3000);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
addProductBtn.addEventListener('click', () => {
    addProductModal.style.display = 'flex';
});

closeModal.addEventListener('click', () => {
    addProductModal.style.display = 'none';
});

window.addEventListener('click', (e) => {
    if (e.target === addProductModal) {
        addProductModal.style.display = 'none';
    }
});

productForm.addEventListener('submit', (e) => {
    e.preventDefault();
    
    const name = document.getElementById('productName').value;
    const description = document.getElementById('productDescription').value;
    const price = document.getElementById('productPrice').value;
    const image = document.getElementById('productImage').value;
    
    if (name && price) {
        addProduct(name, description, price, image);
        productForm.reset();
        addProductModal.style.display = 'none';
    }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    loadProducts();
});
